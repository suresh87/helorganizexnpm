import { MetadataOptions, PackageMetadata } from '.';
/**
 * A simple client interface to the npm repository
 */
export declare class RegistryClient {
    /**
     * Retrieves metadata on the provided package name.
     *
     * If a `dist-tag` is specified in the options, a lookup will first be performed
     * to find the version associated with the tag. If a semver is specified, the
     * appropriate semver matching logic will be performed or a static version may also
     * be specified. If no version is specified, the version will default to `latest`.
     *
     * When `allVersions` is `false`, the requested metadata will be available under
     * `versions` object with a key corresponding to the user provided version or
     * `latest` if no version was provided.
     *
     * Exmaple:
     * ```
     import RegistryClient from 'package-metadata';
     import * as util from 'util';
     const metadata = await RegistryClient.getMetadata('package-metadata', { version: '^1.0.0' });
     console.log(util.inspect(metadata, { depth: 1 }));
     // >> { name: 'package-metadata', versions: { '^1.0.0': [PackageJson] } }
    ```
     *
     * @param packageName
     * @param options
     */
    static getMetadata(packageName: string, options?: MetadataOptions): Promise<PackageMetadata>;
}
export default RegistryClient;
