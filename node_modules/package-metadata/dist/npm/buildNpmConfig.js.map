{"version":3,"file":"buildNpmConfig.js","sourceRoot":"","sources":["../../src/npm/buildNpmConfig.ts"],"names":[],"mappings":";;AAEA,MAAM,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AAEvB,QAAA,cAAc,GAAG,CAAC,KAAc,EAAa,EAAE;IAC1D,MAAM,MAAM,GAAG,OAAO,EAAE,CAAC;IAEzB,MAAM,SAAS,GAAc;QAC3B,KAAK,EAAE;YACL,IAAI,EAAE,MAAM,CAAC,GAAG,CAAC,GAAG,KAAK,QAAQ,CAAC,IAAI,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC;YACzD,KAAK,EAAE,MAAM,CAAC,GAAG,CAAC,GAAG,KAAK,cAAc,CAAC,IAAI,MAAM,CAAC,GAAG,CAAC,aAAa,CAAC;YACtE,YAAY,EAAE,MAAM,CAAC,GAAG,CAAC,GAAG,KAAK,gBAAgB,CAAC,IAAI,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC;SAClF;QACD,GAAG,EAAE;YACH,WAAW,EAAE,MAAM,CAAC,GAAG,CAAC,GAAG,KAAK,OAAO,CAAC,IAAI,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC;YAC9D,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,GAAG,KAAK,MAAM,CAAC,IAAI,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC;YACpD,EAAE,EAAE,MAAM,CAAC,GAAG,CAAC,GAAG,KAAK,KAAK,CAAC,IAAI,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC;YACjD,MAAM,EAAE,MAAM,CAAC,GAAG,CAAC,GAAG,KAAK,aAAa,CAAC,IAAI,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC;SACtE;QACD,QAAQ,EAAE,MAAM,CAAC,GAAG,CAAC,GAAG,KAAK,WAAW,CAAC,IAAI,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC;KACpE,CAAA;IAED,OAAO,SAAS,CAAC;AACnB,CAAC,CAAC;AAEF,kBAAe,sBAAc,CAAC","sourcesContent":["import { NpmConfig } from '.';\n\nconst npmConf = require('npm-conf');\n\nexport const buildNpmConfig = (scope?: string): NpmConfig => {\n  const config = npmConf();\n\n  const npmConfig: NpmConfig = {\n    proxy: {\n      http: config.get(`${scope}:proxy`) || config.get('proxy'),\n      https: config.get(`${scope}:https-proxy`) || config.get('https-proxy'),\n      localAddress: config.get(`${scope}:local-address`) || config.get('local-address')\n    },\n    ssl: {\n      certificate: config.get(`${scope}:cert`) || config.get('cert'),\n      key: config.get(`${scope}:key`) || config.get('key'),\n      ca: config.get(`${scope}:ca`) || config.get('ca'),\n      strict: config.get(`${scope}:strict-ssl`) || config.get('strict-ssl')\n    },\n    registry: config.get(`${scope}:registry`) || config.get('registry')\n  }\n\n  return npmConfig;\n};\n\nexport default buildNpmConfig;\n"]}